package tutorial.calculator.sandbox;

/*Generated by MPS */

import javax.swing.JFrame;
import java.awt.GridLayout;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.event.DocumentListener;
import javax.swing.event.DocumentEvent;
import javax.swing.SwingUtilities;

public class MyCalculator extends JFrame {

  public void update() {
    int i_a = 0;
    int i_b = 0;
    int i_c = 0;
    try {
      i_a = Integer.parseInt(inputField_a.getText());
      i_b = Integer.parseInt(inputField_b.getText());
      i_c = Integer.parseInt(inputField_c.getText());
    } catch (NumberFormatException e) {

    }
    OutputField.setText("" + (i_a * 1.5 + i_c * 2 + i_b));
  }

  public MyCalculator() {
    setTitle("MyCalculator");
    setLayout(new GridLayout(0, 2));
    update();
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    pack();
    setVisible(true);
    inputField_a.getDocument().addDocumentListener(listener);
    add(new JLabel("linux"));
    add(inputField_a);
    inputField_b.getDocument().addDocumentListener(listener);
    add(new JLabel("js"));
    add(inputField_b);
    inputField_c.getDocument().addDocumentListener(listener);
    add(new JLabel("php"));
    add(inputField_c);
    add(new JLabel("Output"));
    add(OutputField);
  }

  private MyCalculator.MyListener listener = new MyCalculator.MyListener();

  private JTextField inputField_a = new JTextField();
  private JTextField inputField_b = new JTextField();
  private JTextField inputField_c = new JTextField();

  private JTextField OutputField = new JTextField();


  private class MyListener implements DocumentListener {
    @Override
    public void insertUpdate(DocumentEvent event) {
      update();
    }
    @Override
    public void removeUpdate(DocumentEvent event) {
      update();
    }
    @Override
    public void changedUpdate(DocumentEvent event) {
      update();
    }

  }

  public void main() {
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
      }
    });
  }





}
